//User adds a product to the cart
  .post('/', (req, res, next) => {
    OrderItem.create({
      size: req.body.orderItem.size,
      quantity: req.body.orderItem.quantity,
      order_id: req.session.cart.id,
      product_id: req.body.product_id
    }, {include: [Order, Product]})
    .then(createdOrderItem => {
      console.log('This is the newly created order item: ', createdOrderItem)
      if (!req.session.cart.order_items) {
        req.session.cart.order_items = [createdOrderItem] //If this is the first item in the cart, init the cart
      }
      else {
        req.session.cart.order_items.push(createdOrderItem) //Otherwise add item to existing cart
      }
      res.send(req.session.cart)})
    .catch(next)
  })
  //All items in an order are rendered to the cart
  .get('/:cartId', (req, res, next) => {
    Order.find({
      where: { id: req.params.cartId },
      include: [{model: OrderItem, include: [Product]}]
    })
    .then(foundOrder => res.json(foundOrder))
    .catch(next)
  })
  //submit order - it updates the shipping info, and updates to 'submitted'
  .put('/order/:orderId', (req, res, next) => {
    Order.update(req.body, {
      where: {
        id: req.params.orderId
      },
      include: [OrderItem],
      returning: true
    })
    .then(updatedOrder => {
      res.status(201).json(updatedOrder)})
    .catch(next)
